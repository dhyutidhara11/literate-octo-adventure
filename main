repeat task.wait(1) until game.PlaceId ~= nil
repeat task.wait(1) until game:GetService("Players") and game:GetService("Players").LocalPlayer
repeat task.wait(1) until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("__INTRO")

task.wait(15)

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Save = require(ReplicatedStorage.Library.Client.Save)
local LocalPlayer = Players.LocalPlayer

--[[ UTILS ]]

local function Info(name)
    return Save.Get()[name]
end

--[[ FEATURES ]]

local function CustomEggs_Hatch()
    local args, EggSlotsPurchased = nil, Info("EggSlotsPurchased")

    local function find_nearest_egg()
        local nearest, nearest_distance = nil, math.huge
        if workspace.__THINGS:FindFirstChild("CustomEggs") then
            for _,v in workspace.__THINGS.CustomEggs:GetChildren() do
                if not v:IsA("Model") then continue end
                local dist = (LocalPlayer.Character.HumanoidRootPart.Position - v.PrimaryPart.Position).Magnitude
                if dist > nearest_distance then continue end
                nearest = v.Name
                nearest_distance = dist
            end
        end
        return nearest
    end

    spawn(function()
        while task.wait() do
            pcall(function()
                args = {
                    [1] = find_nearest_egg(),
                    [2] = EggSlotsPurchased
                }
                ReplicatedStorage.Network.CustomEggs_Hatch:InvokeServer(unpack(args))
            end)
        end
    end)
end

local function HugeHatchWebhook(mail, recipient)
    local encodedCollection, Collection
    while true do
        pcall(function()
            encodedCollection = request({Url = "https://biggamesapi.io/api/collection/Pets", Method = "GET",Headers = {["Content-Type"] = "application/json"}})
            Collection = HttpService:JSONDecode(encodedCollection.Body)
        end)
        if Collection then
            print("Collection initialized!")
            break
        end
        task.wait(5)
    end

    local hugeCache = {}
    local function getAllHuge()
        local total = 0
        local newHuges = {}
        for i, v in pairs(Info("Inventory")["Pet"]) do
            if string.find(v.id, "Huge") then
                total = total + 1
                if not hugeCache[i] then
                    hugeCache[i] = v
                    newHuges[i] = v
                end
            end
        end
        print("getAllHuge() :: total : " .. tostring(total))
        return total, newHuges
    end

    local startingHuge = getAllHuge()

    local function update()
        local currentHuge, newHuges = getAllHuge()
        local args

        for i, v in newHuges do
            local rbxImgId = ""
            local prefix = ""
            if v.sh then
                prefix = "Shiny "
            end
            if v.pt == 1 then
                prefix = prefix .. "Golden "
            elseif v.pt == 2 then
                prefix = prefix .. "Rainbow "
            end
            for ii, vv in Collection.data do
                if vv.configName == v.id then
                    local thumbnail = vv.configData.thumbnail
                    if v.pt == 1 then thumbnail = vv.configData.goldenThumbnail end
                    rbxImgId = string.sub(thumbnail, 14)
                end
            end
            print("notify() :: " .. LocalPlayer.Name .. " obtained a " .. prefix .. v.id .. " | rbxImgId : " .. tostring(rbxImgId))
            request({
                Url = "https://discord.com/api/webhooks/1240508523901878332/omkBYaszkqIKet2yYmcBCpnjoTB0wNzRbb2cEDAlv1TrKJZDmfxzAqNCmVHUqmHBcC-2",
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = HttpService:JSONEncode({
                    content = "",
                    tts = false,
                    embeds = {
                        {
                            id = 652627557,
                            title = "Huge hatched!",
                            description = "**" .. LocalPlayer.Name .. "** obtained a **" .. prefix .. v.id .. "**",
                            color = 393165,
                            fields = {},
                            thumbnail = {
                                url = "https://biggamesapi.io/image/" .. rbxImgId
                            },
                            author = {
                                icon_url = "https://www.biggames.io/favicon-32x32.png",
                                name = "BIG Games",
                                url = "https://www.biggames.io/"
                            }
                        }
                    },
                    components = {},
                    actions = {}
                })
            })
            task.wait(10)
            if mail then
                print("mail() :: petID : " .. i .. " | Recipient : " .. recipient)
                args = {
                    [1] = i,
                    [2] = false
                }
                ReplicatedStorage.Network.Locking_SetLocked:InvokeServer(unpack(args))
                task.wait(10)
                repeat
                    args = {
                        [1] = recipient,
                        [2] = prefix .. "Huge",
                        [3] = "Pet",
                        [4] = i,
                        [5] = 1
                    }
                    local success = ReplicatedStorage.Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
                    task.wait(10)
                until success
                task.wait(10)
            end
        end
    end

    spawn(function()
        while task.wait(60) do
            pcall(function()
                update()
            end)
        end
    end)
end

--[[ MAIN ]]

local UserId = LocalPlayer.UserId
if UserId == 5477681609 then -- AK
    -- User-specific configuration for Misc features
    HugeHatchWebhook(true, "LoneByte")

    task.wait(60)

    -- Main script
    getgenv().AuthKey = "HUGE_i2nJpVqbawdA"
    getgenv().LoadSettings = {
        disable_globalhatch = true,
        disable_kickshutdown = true,
        loadFromEnv = false,
        ignoreSave = false,
        uniqueSaves = true
    }
    loadstring(game:HttpGet("https://HugeGames.io/ps99"))()
elseif UserId == 843518270 then -- DB
    -- User-specific configuration for Misc features
    HugeHatchWebhook(true, "LoneByte")

    task.wait(60)

    -- Main script
    getgenv().AuthKey = "HUGE_i2nJpVqbawdA"
    getgenv().LoadSettings = {
        disable_globalhatch = true,
        disable_kickshutdown = true,
        loadFromEnv = false,
        ignoreSave = false,
        uniqueSaves = true
    }
    loadstring(game:HttpGet("https://HugeGames.io/ps99"))()
else
    print("Who tf are you?")
end
